# -*- coding: utf-8 -*-
"""sfp_cnn_pc1.ipynb
Automatically generated by Colaboratory.
By sujeong lim
"""

from tensorflow.keras import datasets, layers, models
import numpy as np
from sklearn.model_selection import train_test_split
from google.colab import drive

drive.mount("/content/drive")
f = open("",'r')
# 1109
instances = f.readlines()
data = []
label = []
for instance in instances:
  record = instance.split(',')
  #save label
  if record.pop().replace("\n","") == 'true':
    label.append(0)
  else:
    label.append(1)
  #save data
  record = list(map(float,record))
  data.append(record)

data = np.array(data)
label = np.array(label)

print("PC1")
print(data)
print("data shape :", data.shape)
print("label shape :", label.shape)
f.close()

x_train, x_test, y_train, y_test = train_test_split(data,label,test_size=0.2, random_state=0)
print("train, test data split...")
x_train = x_train.reshape((887, 21, 1, 1))
y_train = y_train.reshape((887, 1))
x_test = x_test.reshape((222, 21, 1, 1))
y_test = y_test.reshape((222, 1))
print("x_train shape :", x_train.shape, ", y_train shape :", y_train.shape)
print("x_test shape :", x_test.shape, ", y_test shape :", y_test.shape)

#deep learning part
model = models.Sequential()
model.add(layers.Conv2D(64, (1, 1), activation='relu', input_shape=(21,1,1)))
model.add(layers.Conv2D(64, (1, 1), activation='relu'))
model.add(layers.MaxPooling2D((2,1)))
model.add(layers.Conv2D(128, (1, 1),  activation='relu'))
model.add(layers.Conv2D(128, (1, 1),  activation='relu'))
model.add(layers.MaxPooling2D((2, 1)))
model.add(layers.Flatten())
model.add(layers.Dense(128, activation='sigmoid'))
model.add(layers.Dropout(0.3))
model.add(layers.Dense(1, activation='sigmoid'))
opt = tf.keras.optimizers.Adam(learning_rate=0.001)
model.compile(optimizer=opt,
              loss='binary_crossentropy',
              metrics=['accuracy',tf.keras.metrics.AUC()])
model.summary()
model.fit(x_train,y_train, batch_size=15 ,epochs=4000)
model.evaluate(x_test,y_test)